#ifndef _RC_Y_EXCEPTION_H
#define _RC_Y_EXCEPTION_H

namespace owca {
	enum exceptioncode {
		YEXCEPTION_NONE=0,
		YEXCEPTION_CLASSCREATION,
		YEXCEPTION_PARAMASSIGNEDTWICE,
		YEXCEPTION_PARAMNOTSET,
		YEXCEPTION_UNUSEDKEYWORDPARAM,
		YEXCEPTION_KEYWORDPARAMNOTSTRING,
		YEXCEPTION_MISSINGKEYPARAMETER,
		YEXCEPTION_MISSINGVALUEPARAMETER,
		YEXCEPTION_NOCONSTRUCTOR,
		YEXCEPTION_TOOMANYPARAMETERS,
		YEXCEPTION_NOTENOUGHPARAMETERS,
		YEXCEPTION_INVALIDLISTPARAM,
		YEXCEPTION_INVALIDMAPPARAM,
		YEXCEPTION_INVALIDPARAMTYPE,
		YEXCEPTION_INTEGEROUTOFBOUNDS, // integer value is out of bounds for given operation (ie too large index for array access)
		YEXCEPTION_UNSUPPORTEDKEYWORDPARAMETERS,
		YEXCEPTION_INVALIDVM,
		YEXCEPTION_DIVISIONBYZERO,
		YEXCEPTION_OVERFLOW,
		YEXCEPTION_INVALIDIDENT,
		YEXCEPTION_NOTLVALUE,
		YEXCEPTION_NOTRVALUE,
		YEXCEPTION_MISSINGMEMBER,
		YEXCEPTION_TOOMANYITEMSINITER,
		YEXCEPTION_TOOLITTLEITEMSINITER,
		YEXCEPTION_INVALIDRETURNTYPE,
		YEXCEPTION_INVALIDOPERATORFUNCTION,
		YEXCEPTION_MISSINGRETURNVALUE,
		YEXCEPTION_STACKOVERFLOW,
		YEXCEPTION_CANTINSERT,
		YEXCEPTION_KEYNOTFOUND,
		YEXCEPTION_NOCOROUTINETOSTOP,
		YEXCEPTION_CANTSTOPFROMWITHINUSERFUNCTION,
		YEXCEPTION_CANTRESUMEFROMCOROUTINE,
		YEXCEPTION_CANTRESUMENORMALFUNCTION,
		YEXCEPTION_CANTRESUMEFINISHEDCOROUTINE,
		YEXCEPTION_CANTSTOPCOROUTINEFROMUSERFUNCTION,
		YEXCEPTION_CANTCREATEGENERATORFROMUSERFUNCTION,
		YEXCEPTION_LISTMODIFEDWHILEBEINGSORTED,
		YEXCEPTION_MAPMODIFEDWHILEBEINGUSED,
		YEXCEPTION_SETMODIFEDWHILEBEINGUSED,
		YEXCEPTION_USER=1000,
	};
	DLLEXPORT const char *exceptioncode_text(exceptioncode);

	class owca_exception {
		std::string _message;
	public:
		owca_exception(const std::string &txt) : _message(txt) { }

		const std::string &message() const { return _message; }
	};

}

#endif
